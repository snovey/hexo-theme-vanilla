<article class="post-detail">
  <div class="post-title">
    <h1 class="title"><%= page.title %></h1>
  </div>
   <div class="post-meta">
    <span class="date"><%- date(page.date, "YYYY-MM-DD") %></span>
    <% if (theme.menu.tags && page.tags && page.tags.length) { %>
      <span>|<span>
      <%- list_tags(page.tags, {
        show_count: false,
        class: 'article-tag',
        style: 'span',
        separator: ', '
      }) %>
    <% } %>
    <% if (theme.menu.categories && page.categories && page.categories.length) { %>
      <span>|<span>
      <%- list_categories(page.categories, {
        show_count: false,
        class: 'article-tag',
        style: 'span',
        separator: ', '
      }) %>
    <% } %>
  </div>
  <% if (page.toc ? page.toc : theme.toc) { %>
    <div class="toc-article">
        <strong class="toc-title"><%- __('toc') %></strong>
        <%- toc(page.content, {
          class: 'post-toc',
          list_number: theme.toc.list_number
        }) %>
    </div>
  <% } %>
  <div class="post-content">
    <%- page.content %>
  </div>
</article>
<% if (page.top ? page.top : theme.top) { %>
<a class="top" id="top" href="javascript:;"></a>
<% } %>
<% if (page.top ? page.top : theme.top) { %>
<script>
  window.onscroll = function () {
    if (document.body.scrollTop > window.innerHeight) {
      document.getElementById('top').classList.add('toggle')
    } else {
      document.getElementById('top').classList.remove('toggle')
    }
  }

  function scrollTo (element, to, duration) {
    if (duration <= 0) return
    var difference = to - element.scrollTop
    var perTick = -25 + difference / duration * 10
    // console.log(to, element.scrollTop, difference, duration, perTick)

    setTimeout(function () {
      element.scrollTop = element.scrollTop + perTick
      if (element.scrollTop <= to) return
      scrollTo(element, to, duration)
    }, 10)
  }

  document.getElementById('top').addEventListener("click", function () {
    scrollTo(document.body, 0, Math.ceil(document.body.scrollTop / 10))
  }, false)
</script>
<% } %>
<% if (page.mathjax ? page.mathjax : theme.mathjax.enable) { %>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"]  ],
      processEscapes: true,
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
    }
  })
</script>

<script type="text/x-mathjax-config">
  MathJax.Hub.Queue(function() {
    var all = MathJax.Hub.getAllJax(), i
    for (i=0; i < all.length; i += 1) {
      all[i].SourceElement().parentNode.classList.add('has-jax')
    }
    Array.from(document.getElementsByClassName('has-jax')).forEach(function (x) {
      return x.parentNode.style.overflow = 'auto'
    })
  })
</script>
<script src="<%= theme.mathjax.cdn %>"></script>
<% } %>
